//
// Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
//
// On Fri Jan 22 01:17:53 IST 2016
//
//
// Ports:
// Name                         I/O  size props
// gen_pp                         O    64
// gen_pp_multp                   I    64
// gen_pp_lmultp                  I    64
// gen_pp_sel                     I     3
// gen_pp_inv                     I    32
//
// Combinational paths from inputs to outputs:
//   (gen_pp_multp, gen_pp_lmultp, gen_pp_sel, gen_pp_inv) -> gen_pp
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_gen_pp(gen_pp_multp,
		     gen_pp_lmultp,
		     gen_pp_sel,
		     gen_pp_inv,
		     gen_pp);
  // value method gen_pp
  input  [63 : 0] gen_pp_multp;
  input  [63 : 0] gen_pp_lmultp;
  input  [2 : 0] gen_pp_sel;
  input  [31 : 0] gen_pp_inv;
  output [63 : 0] gen_pp;

  // signals for module outputs
  wire [63 : 0] gen_pp;

  // remaining internal signals
  reg [63 : 0] IF_gen_pp_sel_EQ_1_OR_gen_pp_sel_EQ_2_THEN_gen_ETC___d18,
	       _theResult____h25;
  wire [63 : 0] result__h28, result__h55, result__h67;

  // value method gen_pp
  assign gen_pp = (gen_pp_inv == 32'd1) ? result__h28 : _theResult____h25 ;

  // remaining internal signals
  assign result__h28 =
	     (gen_pp_sel == 3'd0) ?
	       64'hFFFFFFFFFFFFFFFF :
	       ~IF_gen_pp_sel_EQ_1_OR_gen_pp_sel_EQ_2_THEN_gen_ETC___d18 ;
  assign result__h55 = ~gen_pp_lmultp + 64'd1 ;
  assign result__h67 = ~gen_pp_multp + 64'd1 ;
  always@(gen_pp_sel or
	  gen_pp_multp or gen_pp_lmultp or result__h55 or result__h67)
  begin
    case (gen_pp_sel)
      3'd0, 3'd7: _theResult____h25 = 64'b0;
      3'd1, 3'd2: _theResult____h25 = gen_pp_multp;
      3'd3: _theResult____h25 = gen_pp_lmultp;
      3'd4: _theResult____h25 = result__h55;
      3'd5, 3'd6: _theResult____h25 = result__h67;
    endcase
  end
  always@(gen_pp_sel or
	  gen_pp_multp or gen_pp_lmultp or result__h55 or result__h67)
  begin
    case (gen_pp_sel)
      3'd1, 3'd2:
	  IF_gen_pp_sel_EQ_1_OR_gen_pp_sel_EQ_2_THEN_gen_ETC___d18 =
	      gen_pp_multp;
      3'd3:
	  IF_gen_pp_sel_EQ_1_OR_gen_pp_sel_EQ_2_THEN_gen_ETC___d18 =
	      gen_pp_lmultp;
      3'd4:
	  IF_gen_pp_sel_EQ_1_OR_gen_pp_sel_EQ_2_THEN_gen_ETC___d18 =
	      result__h55;
      3'd5, 3'd6:
	  IF_gen_pp_sel_EQ_1_OR_gen_pp_sel_EQ_2_THEN_gen_ETC___d18 =
	      result__h67;
      default: IF_gen_pp_sel_EQ_1_OR_gen_pp_sel_EQ_2_THEN_gen_ETC___d18 =
		   64'b0;
    endcase
  end
endmodule  // module_gen_pp

