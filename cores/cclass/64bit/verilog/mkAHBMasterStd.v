//
// Generated by Bluespec Compiler, version 2015.09.beta2 (build 34689, 2015-09-07)
//
// On Mon Dec 19 16:37:04 IST 2016
//
//
// Ports:
// Name                         I/O  size props
// tlm_tx_get                     O    89
// RDY_tlm_tx_get                 O     1
// RDY_tlm_rx_put                 O     1
// HADDR                          O    64 reg
// HWDATA                         O    64 reg
// HWRITE                         O     1 reg
// HTRANS                         O     2 reg
// HBURST                         O     3 reg
// HSIZE                          O     3 reg
// HPROT                          O     4 reg
// HBUSREQ                        O     1
// HLOCK                          O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// tlm_rx_put                     I   173
// HRDATA                         I    64
// HREADY                         I     1
// HRESP                          I     2
// HGRANT                         I     1
// EN_tlm_rx_put                  I     1
// EN_tlm_tx_get                  I     1
//
// Combinational paths from inputs to outputs:
//   (tlm_rx_put, HRDATA, HREADY, HRESP, HGRANT, EN_tlm_rx_put) -> RDY_tlm_tx_get
//   (tlm_rx_put, EN_tlm_rx_put) -> HBUSREQ
//   (tlm_rx_put, HREADY, HGRANT, EN_tlm_rx_put) -> HLOCK
//   (tlm_rx_put, HRDATA, HREADY, HRESP, HGRANT, EN_tlm_rx_put) -> tlm_tx_get
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkAHBMasterStd(CLK,
		      RST_N,

		      EN_tlm_tx_get,
		      tlm_tx_get,
		      RDY_tlm_tx_get,

		      tlm_rx_put,
		      EN_tlm_rx_put,
		      RDY_tlm_rx_put,

		      HADDR,

		      HWDATA,

		      HWRITE,

		      HTRANS,

		      HBURST,

		      HSIZE,

		      HPROT,

		      HRDATA,

		      HREADY,

		      HRESP,

		      HBUSREQ,

		      HLOCK,

		      HGRANT);
  input  CLK;
  input  RST_N;

  // actionvalue method tlm_tx_get
  input  EN_tlm_tx_get;
  output [88 : 0] tlm_tx_get;
  output RDY_tlm_tx_get;

  // action method tlm_rx_put
  input  [172 : 0] tlm_rx_put;
  input  EN_tlm_rx_put;
  output RDY_tlm_rx_put;

  // value method fabric_bus_hADDR
  output [63 : 0] HADDR;

  // value method fabric_bus_hWDATA
  output [63 : 0] HWDATA;

  // value method fabric_bus_hWRITE
  output HWRITE;

  // value method fabric_bus_hTRANS
  output [1 : 0] HTRANS;

  // value method fabric_bus_hBURST
  output [2 : 0] HBURST;

  // value method fabric_bus_hSIZE
  output [2 : 0] HSIZE;

  // value method fabric_bus_hPROT
  output [3 : 0] HPROT;

  // action method fabric_bus_hRDATA
  input  [63 : 0] HRDATA;

  // action method fabric_bus_hREADY
  input  HREADY;

  // action method fabric_bus_hRESP
  input  [1 : 0] HRESP;

  // value method fabric_arbiter_hBUSREQ
  output HBUSREQ;

  // value method fabric_arbiter_hLOCK
  output HLOCK;

  // action method fabric_arbiter_hGRANT
  input  HGRANT;

  // signals for module outputs
  wire [88 : 0] tlm_tx_get;
  wire [63 : 0] HADDR, HWDATA;
  wire [3 : 0] HPROT;
  wire [2 : 0] HBURST, HSIZE;
  wire [1 : 0] HTRANS;
  wire HBUSREQ, HLOCK, HWRITE, RDY_tlm_rx_put, RDY_tlm_tx_get;

  // inlined wires
  wire [173 : 0] fifo_rx_rv$port0__write_1,
		 fifo_rx_rv$port1__read,
		 fifo_rx_rv$port1__write_1,
		 fifo_rx_rv$port2__read;
  wire [88 : 0] fifo_tx_fifof_enqw$wget;
  wire [67 : 0] ifc_response$wget;
  wire [1 : 0] ifc_fifo_op_x_wire$wget;
  wire fifo_rx_rv$EN_port1__write,
       ifc_fifo_op_dequeueing$whas,
       lock_wire$whas,
       response_wire$whas;

  // register count
  reg [4 : 0] count;
  wire [4 : 0] count$D_IN;
  wire count$EN;

  // register data_reg
  reg [64 : 0] data_reg;
  reg [64 : 0] data_reg$D_IN;
  wire data_reg$EN;

  // register descriptor
  reg [172 : 0] descriptor;
  wire [172 : 0] descriptor$D_IN;
  wire descriptor$EN;

  // register fifo_rx_rv
  reg [173 : 0] fifo_rx_rv;
  wire [173 : 0] fifo_rx_rv$D_IN;
  wire fifo_rx_rv$EN;

  // register fifo_tx_count
  reg [2 : 0] fifo_tx_count;
  wire [2 : 0] fifo_tx_count$D_IN;
  wire fifo_tx_count$EN;

  // register grant_reg
  reg grant_reg;
  wire grant_reg$D_IN, grant_reg$EN;

  // register ifc_fifo_op_cntr_r
  reg [1 : 0] ifc_fifo_op_cntr_r;
  wire [1 : 0] ifc_fifo_op_cntr_r$D_IN;
  wire ifc_fifo_op_cntr_r$EN;

  // register ifc_fifo_op_q_0
  reg [1 : 0] ifc_fifo_op_q_0;
  reg [1 : 0] ifc_fifo_op_q_0$D_IN;
  wire ifc_fifo_op_q_0$EN;

  // register ifc_fifo_op_q_1
  reg [1 : 0] ifc_fifo_op_q_1;
  reg [1 : 0] ifc_fifo_op_q_1$D_IN;
  wire ifc_fifo_op_q_1$EN;

  // register ifc_request_reg
  reg [140 : 0] ifc_request_reg;
  reg [140 : 0] ifc_request_reg$D_IN;
  wire ifc_request_reg$EN;

  // register req_reg
  reg req_reg;
  reg req_reg$D_IN;
  wire req_reg$EN;

  // ports of submodule fifo_tx_fifof_ff
  wire [88 : 0] fifo_tx_fifof_ff$D_IN, fifo_tx_fifof_ff$D_OUT;
  wire fifo_tx_fifof_ff$CLR,
       fifo_tx_fifof_ff$DEQ,
       fifo_tx_fifof_ff$EMPTY_N,
       fifo_tx_fifof_ff$ENQ,
       fifo_tx_fifof_ff$FULL_N;

  // ports of submodule fifo_tx_fifof_firstValid
  wire fifo_tx_fifof_firstValid$D_IN,
       fifo_tx_fifof_firstValid$EN,
       fifo_tx_fifof_firstValid$Q_OUT;

  // ports of submodule fifo_tx_levelsValidClr
  wire fifo_tx_levelsValidClr$D_IN,
       fifo_tx_levelsValidClr$EN,
       fifo_tx_levelsValidClr$Q_OUT;

  // ports of submodule fifo_tx_levelsValidDeq
  wire fifo_tx_levelsValidDeq$D_IN,
       fifo_tx_levelsValidDeq$EN,
       fifo_tx_levelsValidDeq$Q_OUT;

  // ports of submodule fifo_tx_levelsValidEnq
  wire fifo_tx_levelsValidEnq$D_IN,
       fifo_tx_levelsValidEnq$EN,
       fifo_tx_levelsValidEnq$Q_OUT;

  // rule scheduling signals
  wire CAN_FIRE_RL_fifo_tx_do_clear,
       CAN_FIRE_RL_fifo_tx_do_decr,
       CAN_FIRE_RL_fifo_tx_do_incr,
       CAN_FIRE_RL_fifo_tx_fifof_dequeue,
       CAN_FIRE_RL_fifo_tx_fifof_enqueue,
       CAN_FIRE_RL_grab_invalid_response,
       CAN_FIRE_RL_grab_valid_response,
       CAN_FIRE_RL_idle_op,
       CAN_FIRE_RL_ifc_do_enq,
       CAN_FIRE_RL_ifc_every,
       CAN_FIRE_RL_ifc_fifo_op_both,
       CAN_FIRE_RL_ifc_fifo_op_decCtr,
       CAN_FIRE_RL_ifc_fifo_op_incCtr,
       CAN_FIRE_RL_ifc_pre_enq,
       CAN_FIRE_RL_read_op,
       CAN_FIRE_RL_send_request,
       CAN_FIRE_RL_stall,
       CAN_FIRE_RL_stall_op,
       CAN_FIRE_RL_start_op,
       CAN_FIRE_RL_update_grant,
       CAN_FIRE_RL_write_op,
       CAN_FIRE_fabric_arbiter_hGRANT,
       CAN_FIRE_fabric_bus_hRDATA,
       CAN_FIRE_fabric_bus_hREADY,
       CAN_FIRE_fabric_bus_hRESP,
       CAN_FIRE_tlm_rx_put,
       CAN_FIRE_tlm_tx_get,
       WILL_FIRE_RL_fifo_tx_do_clear,
       WILL_FIRE_RL_fifo_tx_do_decr,
       WILL_FIRE_RL_fifo_tx_do_incr,
       WILL_FIRE_RL_fifo_tx_fifof_dequeue,
       WILL_FIRE_RL_fifo_tx_fifof_enqueue,
       WILL_FIRE_RL_grab_invalid_response,
       WILL_FIRE_RL_grab_valid_response,
       WILL_FIRE_RL_idle_op,
       WILL_FIRE_RL_ifc_do_enq,
       WILL_FIRE_RL_ifc_every,
       WILL_FIRE_RL_ifc_fifo_op_both,
       WILL_FIRE_RL_ifc_fifo_op_decCtr,
       WILL_FIRE_RL_ifc_fifo_op_incCtr,
       WILL_FIRE_RL_ifc_pre_enq,
       WILL_FIRE_RL_read_op,
       WILL_FIRE_RL_send_request,
       WILL_FIRE_RL_stall,
       WILL_FIRE_RL_stall_op,
       WILL_FIRE_RL_start_op,
       WILL_FIRE_RL_update_grant,
       WILL_FIRE_RL_write_op,
       WILL_FIRE_fabric_arbiter_hGRANT,
       WILL_FIRE_fabric_bus_hRDATA,
       WILL_FIRE_fabric_bus_hREADY,
       WILL_FIRE_fabric_bus_hRESP,
       WILL_FIRE_tlm_rx_put,
       WILL_FIRE_tlm_tx_get;

  // inputs to muxes for submodule ports
  wire [172 : 0] MUX_descriptor$write_1__VAL_1, MUX_descriptor$write_1__VAL_2;
  wire [140 : 0] MUX_ifc_request_reg$write_1__VAL_1,
		 MUX_ifc_request_reg$write_1__VAL_2,
		 MUX_ifc_request_reg$write_1__VAL_3,
		 MUX_ifc_request_reg$write_1__VAL_4;
  wire [64 : 0] MUX_data_reg$write_1__VAL_1,
		MUX_data_reg$write_1__VAL_2,
		MUX_data_reg$write_1__VAL_3;
  wire [4 : 0] MUX_count$write_1__VAL_1, MUX_count$write_1__VAL_2;
  wire [2 : 0] MUX_fifo_tx_count$write_1__VAL_1,
	       MUX_fifo_tx_count$write_1__VAL_2;
  wire [1 : 0] MUX_ifc_fifo_op_cntr_r$write_1__VAL_2,
	       MUX_ifc_fifo_op_q_0$write_1__VAL_2,
	       MUX_ifc_fifo_op_q_1$write_1__VAL_2,
	       MUX_ifc_fifo_op_q_1$write_1__VAL_3;
  wire MUX_ifc_fifo_op_q_0$write_1__SEL_1,
       MUX_ifc_fifo_op_q_0$write_1__SEL_2,
       MUX_ifc_fifo_op_q_1$write_1__SEL_1,
       MUX_ifc_fifo_op_q_1$write_1__SEL_2,
       MUX_lock_wire$wset_1__PSEL_1,
       MUX_req_reg$write_1__SEL_1,
       MUX_req_reg$write_1__VAL_1,
       MUX_req_reg$write_1__VAL_2,
       MUX_req_reg$write_1__VAL_3;

  // remaining internal signals
  reg [2 : 0] CASE_descriptor_BITS_26_TO_25_0_1_1_0_2_0_3_0_0__q1,
	      CASE_fifo_rx_rvport1__read_BITS_24_TO_22_0_fi_ETC__q2,
	      CASE_fifo_rx_rvport1__read_BITS_26_TO_25_0_1__ETC__q3,
	      IF_descriptor_30_BITS_24_TO_22_45_EQ_0_01_OR_d_ETC___d908;
  wire [76 : 0] descriptor_30_BIT_172_31_AND_NOT_descriptor_30_ETC___d975;
  wire [72 : 0] IF_descriptor_30_BIT_172_31_THEN_IF_descriptor_ETC___d974;
  wire [63 : 0] _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552,
		_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113,
		addr___1__h28032,
		addr___1__h3669,
		addr__h27961,
		addr__h3590,
		log_length__h28029,
		log_length__h3666,
		log_size__h28028,
		log_size__h3665,
		mask__h28031,
		mask__h3668,
		next_addr__h27964,
		next_addr__h3593,
		total__h28030,
		total__h3667,
		x__h28044,
		x__h28052,
		x__h3681,
		x__h3690,
		y__h26959,
		y__h28045,
		y__h3682,
		y__h51319;
  wire [5 : 0] value__h14152, value__h25565, value__h38513, value__h49925;
  wire [3 : 0] value__h28053, value__h3691;
  wire [2 : 0] IF_descriptor_30_BITS_26_TO_25_41_EQ_0_09_AND__ETC___d931;
  wire [1 : 0] ifc_fifo_op_cntr_r_8_MINUS_1___d45;
  wire NOT_count_2_EQ_0_3_4_AND_NOT_stall_wire_whas___ETC___d534,
       _dand1lock_wire$EN_wset,
       _dfoo1,
       _dfoo3;

  // actionvalue method tlm_tx_get
  assign tlm_tx_get =
	     fifo_tx_fifof_ff$EMPTY_N ?
	       fifo_tx_fifof_ff$D_OUT :
	       fifo_tx_fifof_enqw$wget ;
  assign RDY_tlm_tx_get =
	     fifo_tx_fifof_firstValid$Q_OUT &&
	     (fifo_tx_fifof_ff$EMPTY_N || CAN_FIRE_RL_grab_valid_response) ;
  assign CAN_FIRE_tlm_tx_get =
	     fifo_tx_fifof_firstValid$Q_OUT &&
	     (fifo_tx_fifof_ff$EMPTY_N || CAN_FIRE_RL_grab_valid_response) ;
  assign WILL_FIRE_tlm_tx_get = EN_tlm_tx_get ;

  // action method tlm_rx_put
  assign RDY_tlm_rx_put = !fifo_rx_rv[173] ;
  assign CAN_FIRE_tlm_rx_put = !fifo_rx_rv[173] ;
  assign WILL_FIRE_tlm_rx_put = EN_tlm_rx_put ;

  // value method fabric_bus_hADDR
  assign HADDR = ifc_request_reg[127:64] ;

  // value method fabric_bus_hWDATA
  assign HWDATA = ifc_request_reg[63:0] ;

  // value method fabric_bus_hWRITE
  assign HWRITE = ifc_request_reg[140] ;

  // value method fabric_bus_hTRANS
  assign HTRANS = ifc_request_reg[133:132] ;

  // value method fabric_bus_hBURST
  assign HBURST = ifc_request_reg[136:134] ;

  // value method fabric_bus_hSIZE
  assign HSIZE = ifc_request_reg[139:137] ;

  // value method fabric_bus_hPROT
  assign HPROT = ifc_request_reg[131:128] ;

  // action method fabric_bus_hRDATA
  assign CAN_FIRE_fabric_bus_hRDATA = 1'd1 ;
  assign WILL_FIRE_fabric_bus_hRDATA = 1'd1 ;

  // action method fabric_bus_hREADY
  assign CAN_FIRE_fabric_bus_hREADY = 1'd1 ;
  assign WILL_FIRE_fabric_bus_hREADY = 1'd1 ;

  // action method fabric_bus_hRESP
  assign CAN_FIRE_fabric_bus_hRESP = 1'd1 ;
  assign WILL_FIRE_fabric_bus_hRESP = 1'd1 ;

  // value method fabric_arbiter_hBUSREQ
  assign HBUSREQ = CAN_FIRE_RL_send_request || req_reg ;

  // value method fabric_arbiter_hLOCK
  assign HLOCK = lock_wire$whas ;

  // action method fabric_arbiter_hGRANT
  assign CAN_FIRE_fabric_arbiter_hGRANT = 1'd1 ;
  assign WILL_FIRE_fabric_arbiter_hGRANT = 1'd1 ;

  // submodule fifo_tx_fifof_ff
  SizedFIFO #(.p1width(32'd89),
	      .p2depth(32'd5),
	      .p3cntr_width(32'd2),
	      .guarded(32'd0)) fifo_tx_fifof_ff(.RST(RST_N),
						.CLK(CLK),
						.D_IN(fifo_tx_fifof_ff$D_IN),
						.ENQ(fifo_tx_fifof_ff$ENQ),
						.DEQ(fifo_tx_fifof_ff$DEQ),
						.CLR(fifo_tx_fifof_ff$CLR),
						.D_OUT(fifo_tx_fifof_ff$D_OUT),
						.FULL_N(fifo_tx_fifof_ff$FULL_N),
						.EMPTY_N(fifo_tx_fifof_ff$EMPTY_N));

  // submodule fifo_tx_fifof_firstValid
  RevertReg #(.width(32'd1), .init(1'd1)) fifo_tx_fifof_firstValid(.CLK(CLK),
								   .D_IN(fifo_tx_fifof_firstValid$D_IN),
								   .EN(fifo_tx_fifof_firstValid$EN),
								   .Q_OUT(fifo_tx_fifof_firstValid$Q_OUT));

  // submodule fifo_tx_levelsValidClr
  RevertReg #(.width(32'd1), .init(1'd1)) fifo_tx_levelsValidClr(.CLK(CLK),
								 .D_IN(fifo_tx_levelsValidClr$D_IN),
								 .EN(fifo_tx_levelsValidClr$EN),
								 .Q_OUT(fifo_tx_levelsValidClr$Q_OUT));

  // submodule fifo_tx_levelsValidDeq
  RevertReg #(.width(32'd1), .init(1'd1)) fifo_tx_levelsValidDeq(.CLK(CLK),
								 .D_IN(fifo_tx_levelsValidDeq$D_IN),
								 .EN(fifo_tx_levelsValidDeq$EN),
								 .Q_OUT(fifo_tx_levelsValidDeq$Q_OUT));

  // submodule fifo_tx_levelsValidEnq
  RevertReg #(.width(32'd1), .init(1'd1)) fifo_tx_levelsValidEnq(.CLK(CLK),
								 .D_IN(fifo_tx_levelsValidEnq$D_IN),
								 .EN(fifo_tx_levelsValidEnq$EN),
								 .Q_OUT(fifo_tx_levelsValidEnq$Q_OUT));

  // rule RL_stall
  assign CAN_FIRE_RL_stall =
	     fifo_tx_levelsValidEnq$Q_OUT && fifo_tx_levelsValidDeq$Q_OUT &&
	     fifo_tx_levelsValidClr$Q_OUT &&
	     fifo_tx_count > 3'd1 &&
	     count != 5'd1 ;
  assign WILL_FIRE_RL_stall = CAN_FIRE_RL_stall ;

  // rule RL_send_request
  assign CAN_FIRE_RL_send_request =
	     fifo_rx_rv$port1__read[173] && !grant_reg &&
	     (count != 5'd0 || !CAN_FIRE_RL_stall) ;
  assign WILL_FIRE_RL_send_request = CAN_FIRE_RL_send_request ;

  // rule RL_update_grant
  assign CAN_FIRE_RL_update_grant = 1'd1 ;
  assign WILL_FIRE_RL_update_grant = 1'd1 ;

  // rule RL_fifo_tx_do_clear
  assign CAN_FIRE_RL_fifo_tx_do_clear = 1'b0 ;
  assign WILL_FIRE_RL_fifo_tx_do_clear = 1'b0 ;

  // rule RL_ifc_every
  assign CAN_FIRE_RL_ifc_every = HREADY ;
  assign WILL_FIRE_RL_ifc_every = HREADY ;

  // rule RL_ifc_pre_enq
  assign CAN_FIRE_RL_ifc_pre_enq =
	     ifc_request_reg[133:132] != 2'd0 &&
	     ifc_request_reg[133:132] != 2'd1 &&
	     HREADY ;
  assign WILL_FIRE_RL_ifc_pre_enq = CAN_FIRE_RL_ifc_pre_enq ;

  // rule RL_start_op
  assign CAN_FIRE_RL_start_op =
	     fifo_rx_rv$port1__read[173] && HREADY &&
	     !fifo_rx_rv$port1__read[172] &&
	     count == 5'd0 &&
	     !CAN_FIRE_RL_stall &&
	     HGRANT ;
  assign WILL_FIRE_RL_start_op = CAN_FIRE_RL_start_op ;

  // rule RL_write_op
  assign CAN_FIRE_RL_write_op =
	     fifo_rx_rv$port1__read[173] && HREADY &&
	     fifo_rx_rv$port1__read[172] &&
	     descriptor[172] &&
	     descriptor[171:170] == 2'd1 &&
	     NOT_count_2_EQ_0_3_4_AND_NOT_stall_wire_whas___ETC___d534 ;
  assign WILL_FIRE_RL_write_op = CAN_FIRE_RL_write_op ;

  // rule RL_read_op
  assign CAN_FIRE_RL_read_op =
	     HREADY && descriptor[172] && descriptor[171:170] == 2'd0 &&
	     NOT_count_2_EQ_0_3_4_AND_NOT_stall_wire_whas___ETC___d534 ;
  assign WILL_FIRE_RL_read_op = CAN_FIRE_RL_read_op ;

  // rule RL_idle_op
  assign CAN_FIRE_RL_idle_op = HREADY && data_reg[64] ;
  assign WILL_FIRE_RL_idle_op =
	     CAN_FIRE_RL_idle_op && !WILL_FIRE_RL_read_op &&
	     !WILL_FIRE_RL_write_op &&
	     !WILL_FIRE_RL_start_op ;

  // rule RL_stall_op
  assign CAN_FIRE_RL_stall_op = HREADY && !data_reg[64] ;
  assign WILL_FIRE_RL_stall_op =
	     CAN_FIRE_RL_stall_op && !WILL_FIRE_RL_read_op &&
	     !WILL_FIRE_RL_write_op &&
	     !WILL_FIRE_RL_start_op ;

  // rule RL_grab_valid_response
  assign CAN_FIRE_RL_grab_valid_response =
	     response_wire$whas && fifo_tx_fifof_ff$FULL_N &&
	     ifc_response$wget[1] ;
  assign WILL_FIRE_RL_grab_valid_response = CAN_FIRE_RL_grab_valid_response ;

  // rule RL_grab_invalid_response
  assign CAN_FIRE_RL_grab_invalid_response =
	     response_wire$whas && !ifc_response$wget[1] ;
  assign WILL_FIRE_RL_grab_invalid_response =
	     CAN_FIRE_RL_grab_invalid_response ;

  // rule RL_fifo_tx_do_incr
  assign CAN_FIRE_RL_fifo_tx_do_incr =
	     CAN_FIRE_RL_grab_valid_response && !EN_tlm_tx_get ;
  assign WILL_FIRE_RL_fifo_tx_do_incr = CAN_FIRE_RL_fifo_tx_do_incr ;

  // rule RL_fifo_tx_do_decr
  assign CAN_FIRE_RL_fifo_tx_do_decr =
	     !CAN_FIRE_RL_grab_valid_response && EN_tlm_tx_get ;
  assign WILL_FIRE_RL_fifo_tx_do_decr = CAN_FIRE_RL_fifo_tx_do_decr ;

  // rule RL_fifo_tx_fifof_enqueue
  assign CAN_FIRE_RL_fifo_tx_fifof_enqueue =
	     CAN_FIRE_RL_grab_valid_response &&
	     (!EN_tlm_tx_get || fifo_tx_fifof_ff$EMPTY_N) ;
  assign WILL_FIRE_RL_fifo_tx_fifof_enqueue =
	     CAN_FIRE_RL_fifo_tx_fifof_enqueue ;

  // rule RL_fifo_tx_fifof_dequeue
  assign CAN_FIRE_RL_fifo_tx_fifof_dequeue =
	     EN_tlm_tx_get && fifo_tx_fifof_ff$EMPTY_N ;
  assign WILL_FIRE_RL_fifo_tx_fifof_dequeue =
	     CAN_FIRE_RL_fifo_tx_fifof_dequeue ;

  // rule RL_ifc_do_enq
  assign CAN_FIRE_RL_ifc_do_enq =
	     ifc_fifo_op_cntr_r != 2'd2 && CAN_FIRE_RL_ifc_pre_enq ;
  assign WILL_FIRE_RL_ifc_do_enq = CAN_FIRE_RL_ifc_do_enq ;

  // rule RL_ifc_fifo_op_incCtr
  assign CAN_FIRE_RL_ifc_fifo_op_incCtr =
	     CAN_FIRE_RL_ifc_do_enq && CAN_FIRE_RL_ifc_do_enq &&
	     !ifc_fifo_op_dequeueing$whas ;
  assign WILL_FIRE_RL_ifc_fifo_op_incCtr = CAN_FIRE_RL_ifc_fifo_op_incCtr ;

  // rule RL_ifc_fifo_op_decCtr
  assign CAN_FIRE_RL_ifc_fifo_op_decCtr =
	     ifc_fifo_op_dequeueing$whas && !CAN_FIRE_RL_ifc_do_enq ;
  assign WILL_FIRE_RL_ifc_fifo_op_decCtr = CAN_FIRE_RL_ifc_fifo_op_decCtr ;

  // rule RL_ifc_fifo_op_both
  assign CAN_FIRE_RL_ifc_fifo_op_both =
	     CAN_FIRE_RL_ifc_do_enq && ifc_fifo_op_dequeueing$whas &&
	     CAN_FIRE_RL_ifc_do_enq ;
  assign WILL_FIRE_RL_ifc_fifo_op_both = CAN_FIRE_RL_ifc_fifo_op_both ;

  // inputs to muxes for submodule ports
  assign MUX_ifc_fifo_op_q_0$write_1__SEL_1 =
	     WILL_FIRE_RL_ifc_fifo_op_incCtr && ifc_fifo_op_cntr_r == 2'd0 ;
  assign MUX_ifc_fifo_op_q_0$write_1__SEL_2 =
	     WILL_FIRE_RL_ifc_fifo_op_both && _dfoo3 ;
  assign MUX_ifc_fifo_op_q_1$write_1__SEL_1 =
	     WILL_FIRE_RL_ifc_fifo_op_incCtr && ifc_fifo_op_cntr_r == 2'd1 ;
  assign MUX_ifc_fifo_op_q_1$write_1__SEL_2 =
	     WILL_FIRE_RL_ifc_fifo_op_both && _dfoo1 ;
  assign MUX_lock_wire$wset_1__PSEL_1 =
	     WILL_FIRE_RL_read_op || WILL_FIRE_RL_write_op ;
  assign MUX_req_reg$write_1__SEL_1 =
	     WILL_FIRE_RL_stall_op || WILL_FIRE_RL_idle_op ;
  assign MUX_count$write_1__VAL_1 = count - 5'd1 ;
  assign MUX_count$write_1__VAL_2 = fifo_rx_rv$port1__read[39:35] - 5'd1 ;
  assign MUX_data_reg$write_1__VAL_1 =
	     { 1'd0, 64'hAAAAAAAAAAAAAAAA /* unspecified value */  } ;
  assign MUX_data_reg$write_1__VAL_2 =
	     { 1'd1, fifo_rx_rv$port1__read[103:40] } ;
  assign MUX_data_reg$write_1__VAL_3 =
	     { 1'd1, fifo_rx_rv$port1__read[71:8] } ;
  assign MUX_descriptor$write_1__VAL_1 =
	     { 1'd1,
	       descriptor[171:168],
	       next_addr__h27964,
	       descriptor[103:0] } ;
  assign MUX_descriptor$write_1__VAL_2 =
	     { 1'd1,
	       fifo_rx_rv$port1__read[171:168],
	       next_addr__h3593,
	       fifo_rx_rv$port1__read[103:0] } ;
  assign MUX_fifo_tx_count$write_1__VAL_1 = fifo_tx_count + 3'd1 ;
  assign MUX_fifo_tx_count$write_1__VAL_2 = fifo_tx_count - 3'd1 ;
  assign MUX_ifc_fifo_op_cntr_r$write_1__VAL_2 = ifc_fifo_op_cntr_r + 2'd1 ;
  assign MUX_ifc_fifo_op_q_0$write_1__VAL_2 =
	     (ifc_fifo_op_cntr_r == 2'd1) ?
	       ifc_fifo_op_x_wire$wget :
	       ifc_fifo_op_q_1 ;
  assign MUX_ifc_fifo_op_q_1$write_1__VAL_2 =
	     (ifc_fifo_op_cntr_r == 2'd2) ?
	       ifc_fifo_op_x_wire$wget :
	       { 1'd0, 1'b0 /* unspecified value */  } ;
  assign MUX_ifc_fifo_op_q_1$write_1__VAL_3 =
	     { 1'd0, 1'b0 /* unspecified value */  } ;
  assign MUX_ifc_request_reg$write_1__VAL_1 =
	     { descriptor[171:170] != 2'd0,
	       IF_descriptor_30_BITS_24_TO_22_45_EQ_0_01_OR_d_ETC___d908,
	       IF_descriptor_30_BITS_26_TO_25_41_EQ_0_09_AND__ETC___d931,
	       (descriptor[26:25] == 2'd0 && descriptor[39:35] == 5'd1 ||
		(descriptor[26:25] != 2'd1 || descriptor[39:35] != 5'd4) &&
		(descriptor[26:25] != 2'd1 || descriptor[39:35] != 5'd8) &&
		(descriptor[26:25] != 2'd1 || descriptor[39:35] != 5'd16) &&
		descriptor[26:25] != 2'd0) ?
		 2'd2 :
		 2'd3,
	       descriptor[3:0],
	       descriptor[167:104],
	       data_reg[63:0] } ;
  assign MUX_ifc_request_reg$write_1__VAL_2 =
	     { fifo_rx_rv$port1__read[171:170] != 2'd0,
	       CASE_fifo_rx_rvport1__read_BITS_24_TO_22_0_fi_ETC__q2,
	       (fifo_rx_rv$port1__read[26:25] == 2'd0 &&
		fifo_rx_rv$port1__read[39:35] == 5'd1) ?
		 3'd0 :
		 ((fifo_rx_rv$port1__read[26:25] == 2'd0 &&
		   fifo_rx_rv$port1__read[39:35] == 5'd4) ?
		    3'd3 :
		    ((fifo_rx_rv$port1__read[26:25] == 2'd0 &&
		      fifo_rx_rv$port1__read[39:35] == 5'd8) ?
		       3'd5 :
		       ((fifo_rx_rv$port1__read[26:25] == 2'd0 &&
			 fifo_rx_rv$port1__read[39:35] == 5'd16) ?
			  3'd7 :
			  ((fifo_rx_rv$port1__read[26:25] == 2'd1 &&
			    fifo_rx_rv$port1__read[39:35] == 5'd4) ?
			     3'd2 :
			     ((fifo_rx_rv$port1__read[26:25] == 2'd1 &&
			       fifo_rx_rv$port1__read[39:35] == 5'd8) ?
				3'd4 :
				((fifo_rx_rv$port1__read[26:25] == 2'd1 &&
				  fifo_rx_rv$port1__read[39:35] == 5'd16) ?
				   3'd6 :
				   CASE_fifo_rx_rvport1__read_BITS_26_TO_25_0_1__ETC__q3)))))),
	       2'd2,
	       fifo_rx_rv$port1__read[3:0],
	       fifo_rx_rv$port1__read[167:104],
	       data_reg[63:0] } ;
  assign MUX_ifc_request_reg$write_1__VAL_3 =
	     { descriptor_30_BIT_172_31_AND_NOT_descriptor_30_ETC___d975,
	       data_reg[63:0] } ;
  assign MUX_ifc_request_reg$write_1__VAL_4 =
	     { descriptor_30_BIT_172_31_AND_NOT_descriptor_30_ETC___d975,
	       64'hAAAAAAAAAAAAAAAA /* unspecified value */  } ;
  assign MUX_req_reg$write_1__VAL_1 =
	     (!descriptor[172] ||
	      (descriptor[26:25] != 2'd0 || descriptor[39:35] != 5'd1) &&
	      (descriptor[26:25] == 2'd1 && descriptor[39:35] == 5'd4 ||
	       descriptor[26:25] == 2'd1 && descriptor[39:35] == 5'd8 ||
	       descriptor[26:25] == 2'd1 && descriptor[39:35] == 5'd16 ||
	       descriptor[26:25] == 2'd0)) &&
	     count != 5'd0 &&
	     req_reg ;
  assign MUX_req_reg$write_1__VAL_2 =
	     descriptor[39:35] != 5'd1 && descriptor[39:35] != 5'd4 &&
	     descriptor[39:35] != 5'd8 &&
	     descriptor[39:35] != 5'd16 &&
	     descriptor[26:25] == 2'd0 &&
	     count != 5'd1 ;
  assign MUX_req_reg$write_1__VAL_3 =
	     fifo_rx_rv$port1__read[39:35] != 5'd4 &&
	     fifo_rx_rv$port1__read[39:35] != 5'd8 &&
	     fifo_rx_rv$port1__read[39:35] != 5'd16 &&
	     fifo_rx_rv$port1__read[26:25] == 2'd0 &&
	     fifo_rx_rv$port1__read[39:35] != 5'd1 ;

  // inlined wires
  assign response_wire$whas =
	     WILL_FIRE_RL_stall_op || WILL_FIRE_RL_idle_op ||
	     WILL_FIRE_RL_read_op ||
	     WILL_FIRE_RL_write_op ||
	     WILL_FIRE_RL_start_op ;
  assign fifo_tx_fifof_enqw$wget =
	     { ifc_response$wget[0] ? 2'd1 : 2'd0,
	       ifc_response$wget[65:2],
	       (ifc_response$wget[67:66] == 2'd0) ?
		 ifc_response$wget[67:66] :
		 2'd1,
	       17'd0,
	       4'b1010 /* unspecified value */  } ;
  assign lock_wire$whas =
	     _dand1lock_wire$EN_wset ||
	     WILL_FIRE_RL_start_op &&
	     (fifo_rx_rv$port1__read[26:25] != 2'd1 ||
	      fifo_rx_rv$port1__read[39:35] != 5'd4) &&
	     (fifo_rx_rv$port1__read[26:25] != 2'd1 ||
	      fifo_rx_rv$port1__read[39:35] != 5'd8) &&
	     (fifo_rx_rv$port1__read[26:25] != 2'd1 ||
	      fifo_rx_rv$port1__read[39:35] != 5'd16) &&
	     fifo_rx_rv$port1__read[26:25] != 2'd0 &&
	     fifo_rx_rv$port1__read[39:35] != 5'd1 ;
  assign ifc_response$wget = { HRESP, HRDATA, ifc_fifo_op_q_0 } ;
  assign ifc_fifo_op_x_wire$wget = { 1'd1, ifc_request_reg[140] } ;
  assign ifc_fifo_op_dequeueing$whas = HREADY && ifc_fifo_op_cntr_r != 2'd0 ;
  assign fifo_rx_rv$port0__write_1 = { 1'd1, tlm_rx_put } ;
  assign fifo_rx_rv$port1__read =
	     EN_tlm_rx_put ? fifo_rx_rv$port0__write_1 : fifo_rx_rv ;
  assign fifo_rx_rv$EN_port1__write =
	     WILL_FIRE_RL_write_op || WILL_FIRE_RL_start_op ;
  assign fifo_rx_rv$port1__write_1 =
	     { 1'd0,
	       173'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  } ;
  assign fifo_rx_rv$port2__read =
	     fifo_rx_rv$EN_port1__write ?
	       fifo_rx_rv$port1__write_1 :
	       fifo_rx_rv$port1__read ;

  // register count
  assign count$D_IN =
	     MUX_lock_wire$wset_1__PSEL_1 ?
	       MUX_count$write_1__VAL_1 :
	       MUX_count$write_1__VAL_2 ;
  assign count$EN =
	     WILL_FIRE_RL_read_op || WILL_FIRE_RL_write_op ||
	     WILL_FIRE_RL_start_op ;

  // register data_reg
  always@(WILL_FIRE_RL_idle_op or
	  MUX_data_reg$write_1__VAL_1 or
	  WILL_FIRE_RL_start_op or
	  MUX_data_reg$write_1__VAL_2 or
	  WILL_FIRE_RL_write_op or
	  MUX_data_reg$write_1__VAL_3 or WILL_FIRE_RL_read_op)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_idle_op: data_reg$D_IN = MUX_data_reg$write_1__VAL_1;
      WILL_FIRE_RL_start_op: data_reg$D_IN = MUX_data_reg$write_1__VAL_2;
      WILL_FIRE_RL_write_op: data_reg$D_IN = MUX_data_reg$write_1__VAL_3;
      WILL_FIRE_RL_read_op: data_reg$D_IN = 65'h10000000000000000;
      default: data_reg$D_IN = 65'h0AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign data_reg$EN =
	     WILL_FIRE_RL_idle_op || WILL_FIRE_RL_start_op ||
	     WILL_FIRE_RL_write_op ||
	     WILL_FIRE_RL_read_op ;

  // register descriptor
  assign descriptor$D_IN =
	     MUX_lock_wire$wset_1__PSEL_1 ?
	       MUX_descriptor$write_1__VAL_1 :
	       MUX_descriptor$write_1__VAL_2 ;
  assign descriptor$EN =
	     WILL_FIRE_RL_read_op || WILL_FIRE_RL_write_op ||
	     WILL_FIRE_RL_start_op ;

  // register fifo_rx_rv
  assign fifo_rx_rv$D_IN = fifo_rx_rv$port2__read ;
  assign fifo_rx_rv$EN = 1'b1 ;

  // register fifo_tx_count
  assign fifo_tx_count$D_IN =
	     WILL_FIRE_RL_fifo_tx_do_incr ?
	       MUX_fifo_tx_count$write_1__VAL_1 :
	       MUX_fifo_tx_count$write_1__VAL_2 ;
  assign fifo_tx_count$EN =
	     WILL_FIRE_RL_fifo_tx_do_incr || WILL_FIRE_RL_fifo_tx_do_decr ;

  // register grant_reg
  assign grant_reg$D_IN = HGRANT ;
  assign grant_reg$EN = 1'd1 ;

  // register ifc_fifo_op_cntr_r
  assign ifc_fifo_op_cntr_r$D_IN =
	     WILL_FIRE_RL_ifc_fifo_op_decCtr ?
	       ifc_fifo_op_cntr_r_8_MINUS_1___d45 :
	       MUX_ifc_fifo_op_cntr_r$write_1__VAL_2 ;
  assign ifc_fifo_op_cntr_r$EN =
	     WILL_FIRE_RL_ifc_fifo_op_decCtr ||
	     WILL_FIRE_RL_ifc_fifo_op_incCtr ;

  // register ifc_fifo_op_q_0
  always@(MUX_ifc_fifo_op_q_0$write_1__SEL_1 or
	  ifc_fifo_op_x_wire$wget or
	  MUX_ifc_fifo_op_q_0$write_1__SEL_2 or
	  MUX_ifc_fifo_op_q_0$write_1__VAL_2 or
	  WILL_FIRE_RL_ifc_fifo_op_decCtr or ifc_fifo_op_q_1)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_ifc_fifo_op_q_0$write_1__SEL_1:
	  ifc_fifo_op_q_0$D_IN = ifc_fifo_op_x_wire$wget;
      MUX_ifc_fifo_op_q_0$write_1__SEL_2:
	  ifc_fifo_op_q_0$D_IN = MUX_ifc_fifo_op_q_0$write_1__VAL_2;
      WILL_FIRE_RL_ifc_fifo_op_decCtr: ifc_fifo_op_q_0$D_IN = ifc_fifo_op_q_1;
      default: ifc_fifo_op_q_0$D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign ifc_fifo_op_q_0$EN =
	     WILL_FIRE_RL_ifc_fifo_op_incCtr && ifc_fifo_op_cntr_r == 2'd0 ||
	     WILL_FIRE_RL_ifc_fifo_op_both && _dfoo3 ||
	     WILL_FIRE_RL_ifc_fifo_op_decCtr ;

  // register ifc_fifo_op_q_1
  always@(MUX_ifc_fifo_op_q_1$write_1__SEL_1 or
	  ifc_fifo_op_x_wire$wget or
	  MUX_ifc_fifo_op_q_1$write_1__SEL_2 or
	  MUX_ifc_fifo_op_q_1$write_1__VAL_2 or
	  WILL_FIRE_RL_ifc_fifo_op_decCtr or
	  MUX_ifc_fifo_op_q_1$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_ifc_fifo_op_q_1$write_1__SEL_1:
	  ifc_fifo_op_q_1$D_IN = ifc_fifo_op_x_wire$wget;
      MUX_ifc_fifo_op_q_1$write_1__SEL_2:
	  ifc_fifo_op_q_1$D_IN = MUX_ifc_fifo_op_q_1$write_1__VAL_2;
      WILL_FIRE_RL_ifc_fifo_op_decCtr:
	  ifc_fifo_op_q_1$D_IN = MUX_ifc_fifo_op_q_1$write_1__VAL_3;
      default: ifc_fifo_op_q_1$D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign ifc_fifo_op_q_1$EN =
	     WILL_FIRE_RL_ifc_fifo_op_incCtr && ifc_fifo_op_cntr_r == 2'd1 ||
	     WILL_FIRE_RL_ifc_fifo_op_both && _dfoo1 ||
	     WILL_FIRE_RL_ifc_fifo_op_decCtr ;

  // register ifc_request_reg
  always@(MUX_lock_wire$wset_1__PSEL_1 or
	  MUX_ifc_request_reg$write_1__VAL_1 or
	  WILL_FIRE_RL_start_op or
	  MUX_ifc_request_reg$write_1__VAL_2 or
	  WILL_FIRE_RL_idle_op or
	  MUX_ifc_request_reg$write_1__VAL_3 or
	  WILL_FIRE_RL_stall_op or MUX_ifc_request_reg$write_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lock_wire$wset_1__PSEL_1:
	  ifc_request_reg$D_IN = MUX_ifc_request_reg$write_1__VAL_1;
      WILL_FIRE_RL_start_op:
	  ifc_request_reg$D_IN = MUX_ifc_request_reg$write_1__VAL_2;
      WILL_FIRE_RL_idle_op:
	  ifc_request_reg$D_IN = MUX_ifc_request_reg$write_1__VAL_3;
      WILL_FIRE_RL_stall_op:
	  ifc_request_reg$D_IN = MUX_ifc_request_reg$write_1__VAL_4;
      default: ifc_request_reg$D_IN =
		   141'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign ifc_request_reg$EN =
	     WILL_FIRE_RL_read_op || WILL_FIRE_RL_write_op ||
	     WILL_FIRE_RL_start_op ||
	     WILL_FIRE_RL_idle_op ||
	     WILL_FIRE_RL_stall_op ;

  // register req_reg
  always@(MUX_req_reg$write_1__SEL_1 or
	  MUX_req_reg$write_1__VAL_1 or
	  MUX_lock_wire$wset_1__PSEL_1 or
	  MUX_req_reg$write_1__VAL_2 or
	  WILL_FIRE_RL_start_op or MUX_req_reg$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_req_reg$write_1__SEL_1: req_reg$D_IN = MUX_req_reg$write_1__VAL_1;
      MUX_lock_wire$wset_1__PSEL_1: req_reg$D_IN = MUX_req_reg$write_1__VAL_2;
      WILL_FIRE_RL_start_op: req_reg$D_IN = MUX_req_reg$write_1__VAL_3;
      default: req_reg$D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign req_reg$EN = response_wire$whas ;

  // submodule fifo_tx_fifof_ff
  assign fifo_tx_fifof_ff$D_IN = fifo_tx_fifof_enqw$wget ;
  assign fifo_tx_fifof_ff$ENQ = CAN_FIRE_RL_fifo_tx_fifof_enqueue ;
  assign fifo_tx_fifof_ff$DEQ = CAN_FIRE_RL_fifo_tx_fifof_dequeue ;
  assign fifo_tx_fifof_ff$CLR = 1'b0 ;

  // submodule fifo_tx_fifof_firstValid
  assign fifo_tx_fifof_firstValid$D_IN = 1'd1 ;
  assign fifo_tx_fifof_firstValid$EN = EN_tlm_tx_get ;

  // submodule fifo_tx_levelsValidClr
  assign fifo_tx_levelsValidClr$D_IN = 1'b0 ;
  assign fifo_tx_levelsValidClr$EN = 1'b0 ;

  // submodule fifo_tx_levelsValidDeq
  assign fifo_tx_levelsValidDeq$D_IN = 1'd1 ;
  assign fifo_tx_levelsValidDeq$EN = EN_tlm_tx_get ;

  // submodule fifo_tx_levelsValidEnq
  assign fifo_tx_levelsValidEnq$D_IN = 1'd1 ;
  assign fifo_tx_levelsValidEnq$EN = CAN_FIRE_RL_grab_valid_response ;

  // remaining internal signals
  assign IF_descriptor_30_BITS_26_TO_25_41_EQ_0_09_AND__ETC___d931 =
	     (descriptor[26:25] == 2'd0 && descriptor[39:35] == 5'd1) ?
	       3'd0 :
	       ((descriptor[26:25] == 2'd0 && descriptor[39:35] == 5'd4) ?
		  3'd3 :
		  ((descriptor[26:25] == 2'd0 && descriptor[39:35] == 5'd8) ?
		     3'd5 :
		     ((descriptor[26:25] == 2'd0 &&
		       descriptor[39:35] == 5'd16) ?
			3'd7 :
			((descriptor[26:25] == 2'd1 &&
			  descriptor[39:35] == 5'd4) ?
			   3'd2 :
			   ((descriptor[26:25] == 2'd1 &&
			     descriptor[39:35] == 5'd8) ?
			      3'd4 :
			      ((descriptor[26:25] == 2'd1 &&
				descriptor[39:35] == 5'd16) ?
				 3'd6 :
				 CASE_descriptor_BITS_26_TO_25_0_1_1_0_2_0_3_0_0__q1)))))) ;
  assign IF_descriptor_30_BIT_172_31_THEN_IF_descriptor_ETC___d974 =
	     { descriptor[172] ?
		 IF_descriptor_30_BITS_26_TO_25_41_EQ_0_09_AND__ETC___d931 :
		 3'd0,
	       (descriptor[172] &&
		(descriptor[26:25] == 2'd0 && descriptor[39:35] == 5'd1 ||
		 (descriptor[26:25] != 2'd1 || descriptor[39:35] != 5'd4) &&
		 (descriptor[26:25] != 2'd1 || descriptor[39:35] != 5'd8) &&
		 (descriptor[26:25] != 2'd1 || descriptor[39:35] != 5'd16) &&
		 descriptor[26:25] != 2'd0) ||
		count == 5'd0) ?
		 2'd0 :
		 2'd1,
	       descriptor[172] ?
		 { descriptor[3:0], descriptor[167:104] } :
		 68'd0 } ;
  assign NOT_count_2_EQ_0_3_4_AND_NOT_stall_wire_whas___ETC___d534 =
	     count != 5'd0 && !CAN_FIRE_RL_stall && HGRANT ;
  assign _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552 =
	     { 61'd0, descriptor[24:22] } + 64'd1 ;
  assign _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113 =
	     { 61'd0, fifo_rx_rv$port1__read[24:22] } + 64'd1 ;
  assign _dand1lock_wire$EN_wset =
	     (WILL_FIRE_RL_read_op || WILL_FIRE_RL_write_op) &&
	     (descriptor[26:25] == 2'd0 && descriptor[39:35] == 5'd1 ||
	      (descriptor[26:25] != 2'd1 || descriptor[39:35] != 5'd4) &&
	      (descriptor[26:25] != 2'd1 || descriptor[39:35] != 5'd8) &&
	      (descriptor[26:25] != 2'd1 || descriptor[39:35] != 5'd16) &&
	      descriptor[26:25] != 2'd0) ;
  assign _dfoo1 =
	     ifc_fifo_op_cntr_r != 2'd2 ||
	     ifc_fifo_op_cntr_r_8_MINUS_1___d45 == 2'd1 ;
  assign _dfoo3 =
	     ifc_fifo_op_cntr_r != 2'd1 ||
	     ifc_fifo_op_cntr_r_8_MINUS_1___d45 == 2'd0 ;
  assign addr___1__h28032 = x__h28044 | y__h28045 ;
  assign addr___1__h3669 = x__h3681 | y__h3682 ;
  assign addr__h27961 = descriptor[167:104] + x__h28052 ;
  assign addr__h3590 = fifo_rx_rv$port1__read[167:104] + x__h3690 ;
  assign descriptor_30_BIT_172_31_AND_NOT_descriptor_30_ETC___d975 =
	     { descriptor[172] && descriptor[171:170] != 2'd0,
	       descriptor[172] ?
		 IF_descriptor_30_BITS_24_TO_22_45_EQ_0_01_OR_d_ETC___d908 :
		 3'd0,
	       IF_descriptor_30_BIT_172_31_THEN_IF_descriptor_ETC___d974 } ;
  assign ifc_fifo_op_cntr_r_8_MINUS_1___d45 = ifc_fifo_op_cntr_r - 2'd1 ;
  assign log_length__h28029 =
	     (descriptor[35] || descriptor[36] || descriptor[37] ||
	      descriptor[38] ||
	      descriptor[39]) ?
	       { 58'd0, value__h49925 } :
	       64'd64 ;
  assign log_length__h3666 =
	     (fifo_rx_rv$port1__read[35] || fifo_rx_rv$port1__read[36] ||
	      fifo_rx_rv$port1__read[37] ||
	      fifo_rx_rv$port1__read[38] ||
	      fifo_rx_rv$port1__read[39]) ?
	       { 58'd0, value__h25565 } :
	       64'd64 ;
  assign log_size__h28028 =
	     (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[0] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[1] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[2] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[3] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[4] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[5] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[6] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[7] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[8] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[9] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[10] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[11] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[12] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[13] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[14] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[15] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[16] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[17] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[18] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[19] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[20] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[21] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[22] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[23] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[24] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[25] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[26] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[27] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[28] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[29] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[30] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[31] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[32] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[33] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[34] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[35] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[36] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[37] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[38] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[39] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[40] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[41] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[42] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[43] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[44] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[45] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[46] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[47] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[48] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[49] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[50] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[51] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[52] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[53] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[54] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[55] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[56] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[57] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[58] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[59] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[60] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[61] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[62] ||
	      _0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[63]) ?
	       { 58'd0, value__h38513 } :
	       64'd64 ;
  assign log_size__h3665 =
	     (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[0] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[1] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[2] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[3] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[4] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[5] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[6] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[7] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[8] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[9] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[10] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[11] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[12] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[13] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[14] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[15] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[16] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[17] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[18] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[19] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[20] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[21] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[22] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[23] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[24] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[25] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[26] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[27] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[28] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[29] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[30] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[31] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[32] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[33] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[34] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[35] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[36] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[37] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[38] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[39] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[40] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[41] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[42] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[43] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[44] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[45] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[46] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[47] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[48] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[49] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[50] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[51] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[52] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[53] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[54] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[55] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[56] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[57] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[58] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[59] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[60] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[61] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[62] ||
	      _0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[63]) ?
	       { 58'd0, value__h14152 } :
	       64'd64 ;
  assign mask__h28031 = (64'd1 << total__h28030) - 64'd1 ;
  assign mask__h3668 = (64'd1 << total__h3667) - 64'd1 ;
  assign next_addr__h27964 =
	     (descriptor[26:25] == 2'd1) ? addr___1__h28032 : addr__h27961 ;
  assign next_addr__h3593 =
	     (fifo_rx_rv$port1__read[26:25] == 2'd1) ?
	       addr___1__h3669 :
	       addr__h3590 ;
  assign total__h28030 = log_size__h28028 + log_length__h28029 ;
  assign total__h3667 = log_size__h3665 + log_length__h3666 ;
  assign value__h14152 =
	     (!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[0] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[1] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[2] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[3] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[4] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[5] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[6] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[7] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[8] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[9] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[10] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[11] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[12] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[13] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[14] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[15] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[16] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[17] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[18] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[19] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[20] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[21] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[22] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[23] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[24] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[25] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[26] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[27] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[28] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[29] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[30] &&
	      !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[31]) ?
	       ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[32] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[33] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[34] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[35] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[36] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[37] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[38] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[39] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[40] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[41] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[42] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[43] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[44] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[45] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[46] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[47]) ?
		  ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[48] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[49] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[50] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[51] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[52] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[53] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[54] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[55]) ?
		     ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[56] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[57] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[58] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[59]) ?
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[60] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[61]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[62] ?
			      6'd62 :
			      6'd63) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[60] ?
			      6'd60 :
			      6'd61)) :
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[56] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[57]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[58] ?
			      6'd58 :
			      6'd59) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[56] ?
			      6'd56 :
			      6'd57))) :
		     ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[48] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[49] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[50] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[51]) ?
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[52] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[53]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[54] ?
			      6'd54 :
			      6'd55) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[52] ?
			      6'd52 :
			      6'd53)) :
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[48] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[49]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[50] ?
			      6'd50 :
			      6'd51) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[48] ?
			      6'd48 :
			      6'd49)))) :
		  ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[32] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[33] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[34] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[35] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[36] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[37] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[38] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[39]) ?
		     ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[40] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[41] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[42] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[43]) ?
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[44] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[45]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[46] ?
			      6'd46 :
			      6'd47) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[44] ?
			      6'd44 :
			      6'd45)) :
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[40] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[41]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[42] ?
			      6'd42 :
			      6'd43) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[40] ?
			      6'd40 :
			      6'd41))) :
		     ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[32] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[33] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[34] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[35]) ?
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[36] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[37]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[38] ?
			      6'd38 :
			      6'd39) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[36] ?
			      6'd36 :
			      6'd37)) :
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[32] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[33]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[34] ?
			      6'd34 :
			      6'd35) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[32] ?
			      6'd32 :
			      6'd33))))) :
	       ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[0] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[1] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[2] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[3] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[4] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[5] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[6] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[7] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[8] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[9] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[10] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[11] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[12] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[13] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[14] &&
		 !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[15]) ?
		  ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[16] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[17] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[18] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[19] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[20] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[21] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[22] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[23]) ?
		     ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[24] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[25] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[26] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[27]) ?
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[28] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[29]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[30] ?
			      6'd30 :
			      6'd31) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[28] ?
			      6'd28 :
			      6'd29)) :
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[24] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[25]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[26] ?
			      6'd26 :
			      6'd27) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[24] ?
			      6'd24 :
			      6'd25))) :
		     ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[16] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[17] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[18] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[19]) ?
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[20] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[21]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[22] ?
			      6'd22 :
			      6'd23) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[20] ?
			      6'd20 :
			      6'd21)) :
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[16] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[17]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[18] ?
			      6'd18 :
			      6'd19) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[16] ?
			      6'd16 :
			      6'd17)))) :
		  ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[0] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[1] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[2] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[3] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[4] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[5] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[6] &&
		    !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[7]) ?
		     ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[8] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[9] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[10] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[11]) ?
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[12] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[13]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[14] ?
			      6'd14 :
			      6'd15) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[12] ?
			      6'd12 :
			      6'd13)) :
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[8] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[9]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[10] ?
			      6'd10 :
			      6'd11) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[8] ?
			      6'd8 :
			      6'd9))) :
		     ((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[0] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[1] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[2] &&
		       !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[3]) ?
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[4] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[5]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[6] ?
			      6'd6 :
			      6'd7) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[4] ?
			      6'd4 :
			      6'd5)) :
			((!_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[0] &&
			  !_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[1]) ?
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[2] ?
			      6'd2 :
			      6'd3) :
			   (_0_CONCAT_fifo_rx_rv_port1__read__7_BITS_24_TO__ETC___d113[0] ?
			      6'd0 :
			      6'd1))))) ;
  assign value__h25565 =
	     (!fifo_rx_rv$port1__read[35] && !fifo_rx_rv$port1__read[36] &&
	      !fifo_rx_rv$port1__read[37] &&
	      !fifo_rx_rv$port1__read[38]) ?
	       6'd4 :
	       ((!fifo_rx_rv$port1__read[35] && !fifo_rx_rv$port1__read[36]) ?
		  (fifo_rx_rv$port1__read[37] ? 6'd2 : 6'd3) :
		  (fifo_rx_rv$port1__read[35] ? 6'd0 : 6'd1)) ;
  assign value__h28053 =
	     (descriptor[26:25] == 2'd2) ?
	       4'd0 :
	       { 1'd0, descriptor[24:22] } + 4'd1 ;
  assign value__h3691 =
	     (fifo_rx_rv$port1__read[26:25] == 2'd2) ?
	       4'd0 :
	       { 1'd0, fifo_rx_rv$port1__read[24:22] } + 4'd1 ;
  assign value__h38513 =
	     (!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[0] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[1] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[2] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[3] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[4] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[5] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[6] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[7] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[8] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[9] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[10] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[11] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[12] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[13] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[14] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[15] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[16] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[17] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[18] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[19] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[20] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[21] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[22] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[23] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[24] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[25] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[26] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[27] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[28] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[29] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[30] &&
	      !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[31]) ?
	       ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[32] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[33] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[34] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[35] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[36] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[37] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[38] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[39] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[40] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[41] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[42] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[43] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[44] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[45] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[46] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[47]) ?
		  ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[48] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[49] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[50] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[51] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[52] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[53] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[54] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[55]) ?
		     ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[56] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[57] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[58] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[59]) ?
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[60] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[61]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[62] ?
			      6'd62 :
			      6'd63) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[60] ?
			      6'd60 :
			      6'd61)) :
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[56] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[57]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[58] ?
			      6'd58 :
			      6'd59) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[56] ?
			      6'd56 :
			      6'd57))) :
		     ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[48] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[49] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[50] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[51]) ?
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[52] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[53]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[54] ?
			      6'd54 :
			      6'd55) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[52] ?
			      6'd52 :
			      6'd53)) :
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[48] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[49]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[50] ?
			      6'd50 :
			      6'd51) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[48] ?
			      6'd48 :
			      6'd49)))) :
		  ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[32] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[33] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[34] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[35] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[36] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[37] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[38] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[39]) ?
		     ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[40] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[41] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[42] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[43]) ?
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[44] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[45]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[46] ?
			      6'd46 :
			      6'd47) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[44] ?
			      6'd44 :
			      6'd45)) :
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[40] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[41]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[42] ?
			      6'd42 :
			      6'd43) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[40] ?
			      6'd40 :
			      6'd41))) :
		     ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[32] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[33] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[34] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[35]) ?
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[36] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[37]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[38] ?
			      6'd38 :
			      6'd39) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[36] ?
			      6'd36 :
			      6'd37)) :
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[32] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[33]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[34] ?
			      6'd34 :
			      6'd35) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[32] ?
			      6'd32 :
			      6'd33))))) :
	       ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[0] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[1] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[2] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[3] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[4] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[5] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[6] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[7] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[8] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[9] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[10] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[11] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[12] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[13] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[14] &&
		 !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[15]) ?
		  ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[16] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[17] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[18] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[19] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[20] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[21] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[22] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[23]) ?
		     ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[24] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[25] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[26] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[27]) ?
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[28] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[29]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[30] ?
			      6'd30 :
			      6'd31) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[28] ?
			      6'd28 :
			      6'd29)) :
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[24] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[25]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[26] ?
			      6'd26 :
			      6'd27) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[24] ?
			      6'd24 :
			      6'd25))) :
		     ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[16] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[17] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[18] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[19]) ?
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[20] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[21]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[22] ?
			      6'd22 :
			      6'd23) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[20] ?
			      6'd20 :
			      6'd21)) :
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[16] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[17]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[18] ?
			      6'd18 :
			      6'd19) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[16] ?
			      6'd16 :
			      6'd17)))) :
		  ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[0] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[1] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[2] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[3] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[4] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[5] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[6] &&
		    !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[7]) ?
		     ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[8] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[9] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[10] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[11]) ?
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[12] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[13]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[14] ?
			      6'd14 :
			      6'd15) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[12] ?
			      6'd12 :
			      6'd13)) :
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[8] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[9]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[10] ?
			      6'd10 :
			      6'd11) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[8] ?
			      6'd8 :
			      6'd9))) :
		     ((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[0] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[1] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[2] &&
		       !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[3]) ?
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[4] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[5]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[6] ?
			      6'd6 :
			      6'd7) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[4] ?
			      6'd4 :
			      6'd5)) :
			((!_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[0] &&
			  !_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[1]) ?
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[2] ?
			      6'd2 :
			      6'd3) :
			   (_0_CONCAT_descriptor_30_BITS_24_TO_22_45_51_PLUS_1___d552[0] ?
			      6'd0 :
			      6'd1))))) ;
  assign value__h49925 =
	     (!descriptor[35] && !descriptor[36] && !descriptor[37] &&
	      !descriptor[38]) ?
	       6'd4 :
	       ((!descriptor[35] && !descriptor[36]) ?
		  (descriptor[37] ? 6'd2 : 6'd3) :
		  (descriptor[35] ? 6'd0 : 6'd1)) ;
  assign x__h28044 = addr__h27961 & mask__h28031 ;
  assign x__h28052 = { 60'd0, value__h28053 } ;
  assign x__h3681 = addr__h3590 & mask__h3668 ;
  assign x__h3690 = { 60'd0, value__h3691 } ;
  assign y__h26959 = ~mask__h3668 ;
  assign y__h28045 = descriptor[167:104] & y__h51319 ;
  assign y__h3682 = fifo_rx_rv$port1__read[167:104] & y__h26959 ;
  assign y__h51319 = ~mask__h28031 ;
  always@(descriptor)
  begin
    case (descriptor[24:22])
      3'd0, 3'd1:
	  IF_descriptor_30_BITS_24_TO_22_45_EQ_0_01_OR_d_ETC___d908 =
	      descriptor[24:22];
      3'd3: IF_descriptor_30_BITS_24_TO_22_45_EQ_0_01_OR_d_ETC___d908 = 3'd2;
      3'd7: IF_descriptor_30_BITS_24_TO_22_45_EQ_0_01_OR_d_ETC___d908 = 3'd3;
      default: IF_descriptor_30_BITS_24_TO_22_45_EQ_0_01_OR_d_ETC___d908 =
		   3'd0;
    endcase
  end
  always@(descriptor)
  begin
    case (descriptor[26:25])
      2'd0: CASE_descriptor_BITS_26_TO_25_0_1_1_0_2_0_3_0_0__q1 = 3'd1;
      2'd1, 2'd2, 2'd3:
	  CASE_descriptor_BITS_26_TO_25_0_1_1_0_2_0_3_0_0__q1 = 3'd0;
    endcase
  end
  always@(fifo_rx_rv$port1__read)
  begin
    case (fifo_rx_rv$port1__read[24:22])
      3'd0, 3'd1:
	  CASE_fifo_rx_rvport1__read_BITS_24_TO_22_0_fi_ETC__q2 =
	      fifo_rx_rv$port1__read[24:22];
      3'd3: CASE_fifo_rx_rvport1__read_BITS_24_TO_22_0_fi_ETC__q2 = 3'd2;
      3'd7: CASE_fifo_rx_rvport1__read_BITS_24_TO_22_0_fi_ETC__q2 = 3'd3;
      default: CASE_fifo_rx_rvport1__read_BITS_24_TO_22_0_fi_ETC__q2 = 3'd0;
    endcase
  end
  always@(fifo_rx_rv$port1__read)
  begin
    case (fifo_rx_rv$port1__read[26:25])
      2'd0: CASE_fifo_rx_rvport1__read_BITS_26_TO_25_0_1__ETC__q3 = 3'd1;
      2'd1, 2'd2, 2'd3:
	  CASE_fifo_rx_rvport1__read_BITS_26_TO_25_0_1__ETC__q3 = 3'd0;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        count <= `BSV_ASSIGNMENT_DELAY 5'd0;
	data_reg <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 64'hAAAAAAAAAAAAAAAA /* unspecified value */  };
	descriptor <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      172'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  };
	fifo_rx_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      173'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  };
	fifo_tx_count <= `BSV_ASSIGNMENT_DELAY 3'd0;
	grant_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ifc_fifo_op_cntr_r <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ifc_fifo_op_q_0 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'b0 /* unspecified value */  };
	ifc_fifo_op_q_1 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'b0 /* unspecified value */  };
	ifc_request_reg <= `BSV_ASSIGNMENT_DELAY 141'd0;
	req_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (data_reg$EN) data_reg <= `BSV_ASSIGNMENT_DELAY data_reg$D_IN;
	if (descriptor$EN)
	  descriptor <= `BSV_ASSIGNMENT_DELAY descriptor$D_IN;
	if (fifo_rx_rv$EN)
	  fifo_rx_rv <= `BSV_ASSIGNMENT_DELAY fifo_rx_rv$D_IN;
	if (fifo_tx_count$EN)
	  fifo_tx_count <= `BSV_ASSIGNMENT_DELAY fifo_tx_count$D_IN;
	if (grant_reg$EN) grant_reg <= `BSV_ASSIGNMENT_DELAY grant_reg$D_IN;
	if (ifc_fifo_op_cntr_r$EN)
	  ifc_fifo_op_cntr_r <= `BSV_ASSIGNMENT_DELAY ifc_fifo_op_cntr_r$D_IN;
	if (ifc_fifo_op_q_0$EN)
	  ifc_fifo_op_q_0 <= `BSV_ASSIGNMENT_DELAY ifc_fifo_op_q_0$D_IN;
	if (ifc_fifo_op_q_1$EN)
	  ifc_fifo_op_q_1 <= `BSV_ASSIGNMENT_DELAY ifc_fifo_op_q_1$D_IN;
	if (ifc_request_reg$EN)
	  ifc_request_reg <= `BSV_ASSIGNMENT_DELAY ifc_request_reg$D_IN;
	if (req_reg$EN) req_reg <= `BSV_ASSIGNMENT_DELAY req_reg$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    count = 5'h0A;
    data_reg = 65'h0AAAAAAAAAAAAAAAA;
    descriptor = 173'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fifo_rx_rv = 174'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fifo_tx_count = 3'h2;
    grant_reg = 1'h0;
    ifc_fifo_op_cntr_r = 2'h2;
    ifc_fifo_op_q_0 = 2'h2;
    ifc_fifo_op_q_1 = 2'h2;
    ifc_request_reg = 141'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    req_reg = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_grab_invalid_response) $write("");
  end
  // synopsys translate_on
endmodule  // mkAHBMasterStd

