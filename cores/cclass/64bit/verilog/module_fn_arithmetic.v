//
// Generated by Bluespec Compiler, version 2015.09.beta2 (build 34689, 2015-09-07)
//
// On Mon Dec 19 16:37:06 IST 2016
//
//
// Ports:
// Name                         I/O  size props
// fn_arithmetic                  O   133
// fn_arithmetic__opcode          I     5
// fn_arithmetic__funct3          I     3
// fn_arithmetic__funct7          I     7
// fn_arithmetic__operand1        I    64
// fn_arithmetic__operand2        I    64
// fn_arithmetic__immediate_value  I    20 unused
// fn_arithmetic_program_counter  I    64
//
// Combinational paths from inputs to outputs:
//   (fn_arithmetic__opcode,
//    fn_arithmetic__funct3,
//    fn_arithmetic__funct7,
//    fn_arithmetic__operand1,
//    fn_arithmetic__operand2,
//    fn_arithmetic_program_counter) -> fn_arithmetic
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_fn_arithmetic(fn_arithmetic__opcode,
			    fn_arithmetic__funct3,
			    fn_arithmetic__funct7,
			    fn_arithmetic__operand1,
			    fn_arithmetic__operand2,
			    fn_arithmetic__immediate_value,
			    fn_arithmetic_program_counter,
			    fn_arithmetic);
  // value method fn_arithmetic
  input  [4 : 0] fn_arithmetic__opcode;
  input  [2 : 0] fn_arithmetic__funct3;
  input  [6 : 0] fn_arithmetic__funct7;
  input  [63 : 0] fn_arithmetic__operand1;
  input  [63 : 0] fn_arithmetic__operand2;
  input  [19 : 0] fn_arithmetic__immediate_value;
  input  [63 : 0] fn_arithmetic_program_counter;
  output [132 : 0] fn_arithmetic;

  // signals for module outputs
  wire [132 : 0] fn_arithmetic;

  // remaining internal signals
  reg [63 : 0] IF_fn_arithmetic__funct3_EQ_0b10_4_OR_fn_arith_ETC___d280,
	       alu_result___1__h169;
  wire [64 : 0] IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170,
		theResult_____271_BIT_63_AND_fn_arithmetic__fu_ETC__q2;
  wire [63 : 0] IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d268,
		IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64,
		IF_fn_arithmetic__opcode_EQ_0b1100_9_OR_fn_ari_ETC___d29,
		IF_fn_arithmetic__opcode_EQ_0b1110_OR_fn_arith_ETC___d281,
		SEXT_fn_arithmetic__operand1_PLUS_IF_fn_arithm_ETC___d32,
		_theResult_____2__h471,
		alu_result___1__h10174,
		alu_result___1__h10176,
		alu_result___1__h102,
		alu_result___1__h285,
		alu_result___1__h448,
		alu_result___1__h460,
		alu_result___1__h95,
		fn_arithmetic__operand1_PLUS_IF_fn_arithmetic__ETC___d30,
		op2___1__h266,
		temp___1__h548,
		x__h25;
  wire [31 : 0] IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC__q3,
		fn_arithmetic__operand1_BITS_31_TO_0__q1,
		fn_arithmetic__operand1_PLUS_IF_fn_arithmetic__ETC__q4;
  wire [5 : 0] shift_amt__h468;
  wire NOT_fn_arithmetic__funct3_BIT_0_7_8_AND_fn_ari_ETC___d49,
       x__h390,
       x__h5998;

  // value method fn_arithmetic
  assign fn_arithmetic =
	     { x__h25,
	       fn_arithmetic__opcode != 5'b0 &&
	       fn_arithmetic__opcode != 5'b01000,
	       fn_arithmetic__operand2,
	       fn_arithmetic__funct3[1:0],
	       fn_arithmetic__funct3[2],
	       fn_arithmetic__opcode == 5'b01000 } ;

  // remaining internal signals
  assign IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170 =
	     { _theResult_____2__h471[63] & fn_arithmetic__funct7[5],
	       _theResult_____2__h471 } >>
	     shift_amt__h468 |
	     ~(65'h1FFFFFFFFFFFFFFFF >> shift_amt__h468) &
	     {65{theResult_____271_BIT_63_AND_fn_arithmetic__fu_ETC__q2[64]}} ;
  assign IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d268 =
	     (~fn_arithmetic__funct3[2]) ?
	       temp___1__h548 :
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[63:0] ;
  assign IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC__q3 =
	     IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d268[31:0] ;
  assign IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64 =
	     (fn_arithmetic__opcode[1] && fn_arithmetic__funct7[5]) ?
	       { {32{fn_arithmetic__operand1_BITS_31_TO_0__q1[31]}},
		 fn_arithmetic__operand1_BITS_31_TO_0__q1 } :
	       (fn_arithmetic__opcode[1] ?
		  { 32'd0, fn_arithmetic__operand1[31:0] } :
		  fn_arithmetic__operand1) ;
  assign IF_fn_arithmetic__opcode_EQ_0b1100_9_OR_fn_ari_ETC___d29 =
	     ((fn_arithmetic__opcode == 5'b01100 ||
	       fn_arithmetic__opcode == 5'b01110) &&
	      fn_arithmetic__funct3 == 3'b0 &&
	      fn_arithmetic__funct7[5]) ?
	       op2___1__h266 :
	       fn_arithmetic__operand2 ;
  assign IF_fn_arithmetic__opcode_EQ_0b1110_OR_fn_arith_ETC___d281 =
	     ((fn_arithmetic__opcode == 5'b01110 ||
	       fn_arithmetic__opcode == 5'b00110) &&
	      fn_arithmetic__funct3 == 3'b0 ||
	      fn_arithmetic__opcode == 5'b0 ||
	      fn_arithmetic__opcode == 5'b01000 ||
	      (fn_arithmetic__opcode == 5'b00100 ||
	       fn_arithmetic__opcode == 5'b01100) &&
	      fn_arithmetic__funct3 == 3'b0) ?
	       alu_result___1__h169 :
	       IF_fn_arithmetic__funct3_EQ_0b10_4_OR_fn_arith_ETC___d280 ;
  assign NOT_fn_arithmetic__funct3_BIT_0_7_8_AND_fn_ari_ETC___d49 =
	     !fn_arithmetic__funct3[0] && fn_arithmetic__operand1[63] &&
	     !fn_arithmetic__operand2[63] ||
	     (~x__h390 || fn_arithmetic__funct3[0]) &&
	     fn_arithmetic__operand1 < fn_arithmetic__operand2 ;
  assign SEXT_fn_arithmetic__operand1_PLUS_IF_fn_arithm_ETC___d32 =
	     { {32{fn_arithmetic__operand1_PLUS_IF_fn_arithmetic__ETC__q4[31]}},
	       fn_arithmetic__operand1_PLUS_IF_fn_arithmetic__ETC__q4 } ;
  assign _theResult_____2__h471 =
	     (~fn_arithmetic__funct3[2]) ?
	       { IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[0],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[1],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[2],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[3],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[4],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[5],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[6],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[7],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[8],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[9],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[10],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[11],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[12],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[13],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[14],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[15],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[16],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[17],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[18],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[19],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[20],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[21],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[22],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[23],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[24],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[25],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[26],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[27],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[28],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[29],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[30],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[31],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[32],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[33],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[34],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[35],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[36],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[37],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[38],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[39],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[40],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[41],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[42],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[43],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[44],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[45],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[46],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[47],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[48],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[49],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[50],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[51],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[52],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[53],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[54],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[55],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[56],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[57],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[58],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[59],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[60],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[61],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[62],
		 IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64[63] } :
	       IF_fn_arithmetic__opcode_BIT_1_6_AND_fn_arithm_ETC___d64 ;
  assign alu_result___1__h10174 =
	     fn_arithmetic__operand1 | fn_arithmetic__operand2 ;
  assign alu_result___1__h10176 =
	     fn_arithmetic__operand1 & fn_arithmetic__operand2 ;
  assign alu_result___1__h102 =
	     alu_result___1__h95 + fn_arithmetic_program_counter ;
  assign alu_result___1__h285 =
	     NOT_fn_arithmetic__funct3_BIT_0_7_8_AND_fn_ari_ETC___d49 ?
	       64'd1 :
	       64'd0 ;
  assign alu_result___1__h448 =
	     fn_arithmetic__operand1 ^ fn_arithmetic__operand2 ;
  assign alu_result___1__h460 =
	     fn_arithmetic__opcode[1] ?
	       { {32{IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC__q3[31]}},
		 IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC__q3 } :
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d268 ;
  assign alu_result___1__h95 = { fn_arithmetic__operand2[51:0], 12'd0 } ;
  assign fn_arithmetic__operand1_BITS_31_TO_0__q1 =
	     fn_arithmetic__operand1[31:0] ;
  assign fn_arithmetic__operand1_PLUS_IF_fn_arithmetic__ETC___d30 =
	     fn_arithmetic__operand1 +
	     IF_fn_arithmetic__opcode_EQ_0b1100_9_OR_fn_ari_ETC___d29 ;
  assign fn_arithmetic__operand1_PLUS_IF_fn_arithmetic__ETC__q4 =
	     fn_arithmetic__operand1_PLUS_IF_fn_arithmetic__ETC___d30[31:0] ;
  assign op2___1__h266 = ~fn_arithmetic__operand2 + 64'd1 ;
  assign shift_amt__h468 =
	     { x__h5998 & fn_arithmetic__operand2[5],
	       fn_arithmetic__operand2[4:0] } ;
  assign temp___1__h548 =
	     { IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[0],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[1],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[2],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[3],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[4],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[5],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[6],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[7],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[8],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[9],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[10],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[11],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[12],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[13],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[14],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[15],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[16],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[17],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[18],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[19],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[20],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[21],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[22],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[23],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[24],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[25],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[26],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[27],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[28],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[29],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[30],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[31],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[32],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[33],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[34],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[35],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[36],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[37],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[38],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[39],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[40],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[41],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[42],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[43],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[44],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[45],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[46],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[47],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[48],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[49],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[50],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[51],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[52],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[53],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[54],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[55],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[56],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[57],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[58],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[59],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[60],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[61],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[62],
	       IF_INV_fn_arithmetic__funct3_BIT_2_7_8_THEN_IF_ETC___d170[63] } ;
  assign theResult_____271_BIT_63_AND_fn_arithmetic__fu_ETC__q2 =
	     { _theResult_____2__h471[63] & fn_arithmetic__funct7[5],
	       _theResult_____2__h471 } ;
  assign x__h25 =
	     fn_arithmetic__opcode[0] ?
	       (fn_arithmetic__opcode[3] ?
		  alu_result___1__h95 :
		  alu_result___1__h102) :
	       IF_fn_arithmetic__opcode_EQ_0b1110_OR_fn_arith_ETC___d281 ;
  assign x__h390 = fn_arithmetic__operand1[63] ^ fn_arithmetic__operand2[63] ;
  assign x__h5998 = ~fn_arithmetic__opcode[1] ;
  always@(fn_arithmetic__opcode or
	  fn_arithmetic__operand1_PLUS_IF_fn_arithmetic__ETC___d30 or
	  SEXT_fn_arithmetic__operand1_PLUS_IF_fn_arithm_ETC___d32)
  begin
    case (fn_arithmetic__opcode)
      5'b00110, 5'b01110:
	  alu_result___1__h169 =
	      SEXT_fn_arithmetic__operand1_PLUS_IF_fn_arithm_ETC___d32;
      default: alu_result___1__h169 =
		   fn_arithmetic__operand1_PLUS_IF_fn_arithmetic__ETC___d30;
    endcase
  end
  always@(fn_arithmetic__funct3 or
	  alu_result___1__h460 or
	  alu_result___1__h285 or
	  alu_result___1__h448 or
	  alu_result___1__h10174 or alu_result___1__h10176)
  begin
    case (fn_arithmetic__funct3)
      3'd0: IF_fn_arithmetic__funct3_EQ_0b10_4_OR_fn_arith_ETC___d280 = 64'd0;
      3'b001, 3'b101:
	  IF_fn_arithmetic__funct3_EQ_0b10_4_OR_fn_arith_ETC___d280 =
	      alu_result___1__h460;
      3'b010, 3'b011:
	  IF_fn_arithmetic__funct3_EQ_0b10_4_OR_fn_arith_ETC___d280 =
	      alu_result___1__h285;
      3'b100:
	  IF_fn_arithmetic__funct3_EQ_0b10_4_OR_fn_arith_ETC___d280 =
	      alu_result___1__h448;
      3'b110:
	  IF_fn_arithmetic__funct3_EQ_0b10_4_OR_fn_arith_ETC___d280 =
	      alu_result___1__h10174;
      3'b111:
	  IF_fn_arithmetic__funct3_EQ_0b10_4_OR_fn_arith_ETC___d280 =
	      alu_result___1__h10176;
    endcase
  end
endmodule  // module_fn_arithmetic

